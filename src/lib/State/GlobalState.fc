;; SPDX-FileCopyrightText: 2019 Serokell <https://serokell.io>
;;
;; SPDX-License-Identifier: MPL-2.0

cell mkGlobalState(
  slice pk1, slice pk2,
  int share1, int share2,
  int timeout,
  int fineAmount,
  int nonce) {

  return begin_cell()
    .store_pk(pk1)
    .store_pk(pk2)
    .store_uint(share1, 120)
    .store_uint(share2, 120)
    .store_uint(timeout, 32)
    .store_uint(fineAmount, 120)
    .store_uint(nonce, 64)
    .end_cell();
}

;; cell -> (pk1, pk2, share1, share2, timeout, fineAmount, nonce)
_ parseGlobalState(cell data) {
  slice ds = data.begin_parse();
  var res =
    ( ds~load_pk()     ;; pk1
    , ds~load_pk()     ;; pk2
    , ds~load_uint(120) ;; share1
    , ds~load_uint(120) ;; share2
    , ds~load_uint(32) ;; timeout
    , ds~load_uint(120) ;; fineAmount
    , ds~load_uint(64) ;; nonce
    );
  ds.end_parse();
  return res;
}
