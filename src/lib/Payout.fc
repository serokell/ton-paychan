() send_message_back(addr, body, grams, mode) impure {
  ;; int_msg_info$0
  ;;   ihr_disabled:Bool = 1
  ;;   bounce:Bool = 1
  ;;   bounced:Bool = 0
  ;;   src:MsgAddress = addr_none$00
  ;; -> 011000
  var msg = begin_cell()
    .store_uint(0x18, 6) ;; 0x18 = 011000, as described above
    .store_slice(addr)
    .store_grams(grams)
    ;; extra_currencies = hash_map_empty$0
    ;; ihr_fee: Grams = 0000 (0 grams)
    ;; fwd_fee: Grams = 0000 (0 grams)
    ;; created_lt: uint64 = 0
    ;; created_at: uint32 = 0
    ;; init: Maybe  = nothing$0
    ;; body: Either = left$0
    .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
    ;; reqOp: uint32 = 0
    .store_uint(0, 32);
  if (body >= 0) {
    msg~store_uint(body, 32);
  }
  send_raw_message(msg.end_cell(), mode);
}

() proceedPayout(slice addr1, int amount1) impure {
  return send_message_back(addr1, 0, amount1, 2);
}

() proceedPayout2(slice addr1, int amount1, slice addr2, int amount2) impure {
  proceedPayout(addr1, amount1);
  proceedPayout(addr2, amount2);
}
